
=======================================

rlizarraga0@gmail.com

https://github.com/RiLizarraga



https://github.com/RicardoUCSD


C:\_RLS_GoogleDrive\UCSDWESClass\gitHub


=======================================


The OSIRIS testbed's Mobile Relay tests capabilities during Phase 2 mission sprints
https://news.lockheedmartin.com/2023-08-31-Lockheed-Martin-Delivers-Initial-5G-Testbed-to-US-MarineCorps-and-Begins-Mobile-Network-Experimentation#assets_all



 wsl -l -v
$ wsl -d Ubuntu

PS C:\WINDOWS\system32> wsl -l -v
  NAME            STATE           VERSION
* Ubuntu          Stopped         2
  Ubuntu-22.04    Stopped         2
  Ubuntu-24.04    Stopped         2

paswords:
2114
2112

Implementing SSH Server here:
	<x> wsl -d Ubuntu-24.04
	<x> # sudo systemctl status ssh
		ricardo@DESKTOP-RTJE2JI:/mnt/c/WINDOWS/system32$ sudo systemctl status ssh
		○ ssh.service - OpenBSD Secure Shell server
		Loaded: loaded (/usr/lib/systemd/system/ssh.service; disabled; preset: enabled)
		Active: inactive (dead)
		TriggeredBy: ● ssh.socket
		Docs: man:sshd(8)
			 man:sshd_config(5)
	<x> # ip a
		2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000
		link/ether 00:15:5d:fd:eb:99 brd ff:ff:ff:ff:ff:ff
		inet 172.25.32.132
	<x> ping from another computer (Windows 11 console)
		PS C:\WINDOWS\system32> ping 172.25.32.132

		Pinging 172.25.32.132 with 32 bytes of data:
		Reply from 172.25.32.132: bytes=32 time<1ms TTL=64
		Reply from 172.25.32.132: bytes=32 time<1ms TTL=64

	< > ssh ricardo@172.25.32.132	"2114"
sudo apt install tmux

	< > ping 
		PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.
		64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.059 ms
		64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.037 ms
		64 bytes from 127.0.0.1: icmp_seq=3 ttl=64 time=0.036 ms
		64 bytes from 127.0.0.1: icmp_seq=4 ttl=64 time=0.037 ms
		
///

sudo docker images hello-world
sudo docker run hello-world
sudo docker container ls
docker ps -a		{show any status}
systemctl status docker	{see docker service status}
docker inspect hello-world


sudo docker pull alpine
sudo docker images alpine
docker container run alpine echo "hello from alpine" will print "hello from alpine" and then exit
[Use the -d flag to run the container in detached mode.]
sudo docker run -d --name my-alpine-container alpine sleep infinity








